@model shelf_project.Models.Product
@{
    ViewData["Title"] = Model.Name;
    var distributor = ViewBag.Distributor as shelf_project.Models.Distributor;
    var qrCode = ViewBag.QRCode as string;
    var averageRating = (double)ViewBag.AverageRating;
}

<div class="container">
    @if (distributor != null)
    {
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", new { qr = qrCode })">
                        <i class="fas fa-store"></i>
                        @distributor.CompanyName
                    </a>
                </li>
                <li class="breadcrumb-item active">@Model.Name</li>
            </ol>
        </nav>
    }

    <div class="row">
        <div class="col-md-6">
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <img src="@Model.ImageUrl" class="img-fluid rounded shadow" alt="@Model.Name" style="width: 100%; max-height: 500px; object-fit: cover;">
            }
            else
            {
                <div class="d-flex align-items-center justify-content-center bg-light rounded shadow" style="width: 100%; height: 400px;">
                    <i class="fas fa-image text-muted fa-5x"></i>
                </div>
            }
        </div>
        
        <div class="col-md-6">
            <h1 class="mb-3">@Model.Name</h1>
            
            <p class="text-muted mb-2">
                <i class="fas fa-industry"></i>
                @Model.Manufacturer.CompanyName
            </p>
            
            @if (Model.Reviews != null && Model.Reviews.Any(r => r.IsApproved))
            {
                <div class="mb-3">
                    <div class="d-flex align-items-center">
                        @for (int i = 1; i <= 5; i++)
                        {
                            @if (i <= averageRating)
                            {
                                <i class="fas fa-star text-warning"></i>
                            }
                            else
                            {
                                <i class="far fa-star text-warning"></i>
                            }
                        }
                        <span class="ms-2">@averageRating.ToString("F1") (@Model.Reviews.Count(r => r.IsApproved)件のレビュー)</span>
                    </div>
                </div>
            }

            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div class="mb-4">
                    <h5>商品説明</h5>
                    <p>@Model.Description</p>
                </div>
            }
            
            <div class="mb-4">
                <div class="row">
                    <div class="col-sm-6">
                        <h3 class="text-primary mb-2">¥@Model.RetailPrice.ToString("N0")</h3>
                    </div>
                    <div class="col-sm-6">
                        @if (Model.StockQuantity > 10)
                        {
                            <span class="badge bg-success fs-6">在庫あり</span>
                        }
                        else if (Model.StockQuantity > 0)
                        {
                            <span class="badge bg-warning fs-6">残り@Model.StockQuantity個</span>
                        }
                        else
                        {
                            <span class="badge bg-danger fs-6">在庫切れ</span>
                        }
                    </div>
                </div>
            </div>

            @if (Model.FreeShippingThreshold.HasValue || Model.ShippingFee > 0)
            {
                <div class="mb-3">
                    <h6>配送について</h6>
                    @if (Model.FreeShippingThreshold.HasValue)
                    {
                        <p class="text-success mb-1">
                            <i class="fas fa-truck"></i>
                            ¥@Model.FreeShippingThreshold.Value.ToString("N0")以上で送料無料
                        </p>
                    }
                    @if (Model.ShippingFee > 0)
                    {
                        <p class="text-muted mb-1">
                            送料: ¥@Model.ShippingFee.ToString("N0")
                        </p>
                    }
                    @if (Model.RequiresRefrigeration || Model.RequiresFreezing)
                    {
                        <p class="text-info mb-1">
                            <i class="fas fa-snowflake"></i>
                            @(Model.RequiresFreezing ? "冷凍配送" : "冷蔵配送") (+¥550)
                        </p>
                    }
                </div>
            }

            @if (distributor != null)
            {
                <div class="alert alert-info">
                    <h6 class="mb-2">
                        <i class="fas fa-store"></i>
                        @distributor.CompanyName からの紹介商品
                    </h6>
                    <p class="mb-0">この代理店が厳選してお勧めする商品です</p>
                </div>
            }

            <div class="mb-4">
                @if (Model.StockQuantity > 0)
                {
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <button class="btn btn-primary btn-lg w-100 mb-2" onclick="addToCart(@Model.Id)">
                            <i class="fas fa-shopping-cart"></i>
                            カートに追加
                        </button>
                        <button class="btn btn-success btn-lg w-100" onclick="buyNow(@Model.Id)">
                            <i class="fas fa-credit-card"></i>
                            今すぐ購入
                        </button>
                    }
                    else
                    {
                        <a asp-controller="Shop" asp-action="Login" class="btn btn-primary btn-lg w-100 mb-2">
                            ログインして購入
                        </a>
                        <a asp-controller="Shop" asp-action="Register" class="btn btn-outline-primary btn-lg w-100">
                            会員登録して購入
                        </a>
                    }
                }
                else
                {
                    <button class="btn btn-secondary btn-lg w-100" disabled>
                        在庫切れ
                    </button>
                }
            </div>
        </div>
    </div>

    @if (Model.Reviews != null && Model.Reviews.Any(r => r.IsApproved))
    {
        <div class="row mt-5">
            <div class="col-12">
                <h3>レビュー</h3>
                <div class="row">
                    @foreach (var review in Model.Reviews.Where(r => r.IsApproved).OrderByDescending(r => r.CreatedAt))
                    {
                        <div class="col-md-6 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <div>
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                @if (i <= review.Rating)
                                                {
                                                    <i class="fas fa-star text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star text-warning"></i>
                                                }
                                            }
                                        </div>
                                        <small class="text-muted">@review.CreatedAt.ToString("yyyy/MM/dd")</small>
                                    </div>
                                    @if (!string.IsNullOrEmpty(review.Comment))
                                    {
                                        <p class="card-text">@review.Comment</p>
                                    }
                                    <small class="text-muted">@review.User.FirstName @review.User.LastName</small>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
<script>
function addToCart(productId) {
    // TODO: カート機能の実装
    alert('カート機能は実装予定です');
}

function buyNow(productId) {
    // TODO: 今すぐ購入機能の実装
    alert('購入機能は実装予定です');
}
</script>
}