@model shelf_project.Models.Distributor
@{
    ViewData["Title"] = "会社単位精算";
    var allSales = ViewBag.AllSales as List<shelf_project.Models.Sale> ?? new List<shelf_project.Models.Sale>();
    var totalRevenue = ViewBag.TotalRevenue as decimal? ?? 0;
    var totalCommission = ViewBag.TotalCommission as decimal? ?? 0;
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>会社単位精算</h1>
        <div class="btn-group">
            <button class="btn btn-outline-primary" onclick="window.print()">
                <i class="bi bi-printer"></i> 印刷
            </button>
            <button class="btn btn-outline-success" onclick="exportToCSV()">
                <i class="bi bi-file-earmark-excel"></i> CSV出力
            </button>
        </div>
    </div>

    <!-- Company Summary -->
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h5><i class="bi bi-building"></i> @Model.CompanyName - 全社精算サマリー</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h3 class="text-primary">@allSales.Count</h3>
                            <p class="card-text">総取引数</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h3 class="text-success">¥@totalRevenue.ToString("N0")</h3>
                            <p class="card-text">総売上額</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h3 class="text-warning">¥@totalCommission.ToString("N0")</h3>
                            <p class="card-text">総コミッション</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-light">
                        <div class="card-body text-center">
                            <h3 class="text-info">@((Model.ChildDistributors?.Count ?? 0) + 1)</h3>
                            <p class="card-text">拠点数</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Monthly Settlement -->
    <div class="card mb-4">
        <div class="card-header">
            <h5>月次精算詳細</h5>
        </div>
        <div class="card-body">
            @if (allSales.Any())
            {
                var monthlySales = allSales.GroupBy(s => new { s.SaleDate.Year, s.SaleDate.Month })
                                         .OrderByDescending(g => g.Key.Year)
                                         .ThenByDescending(g => g.Key.Month)
                                         .Take(12);

                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>年月</th>
                                <th>取引数</th>
                                <th>売上額</th>
                                <th>コミッション</th>
                                <th>平均取引額</th>
                                <th>状況</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var monthGroup in monthlySales)
                            {
                                var monthRevenue = monthGroup.Sum(s => s.TotalAmount);
                                var monthCommission = monthGroup.Sum(s => s.DistributorCommission);
                                var avgTransaction = monthGroup.Any() ? monthRevenue / monthGroup.Count() : 0;
                                var isCurrentMonth = monthGroup.Key.Year == DateTime.Now.Year && monthGroup.Key.Month == DateTime.Now.Month;
                                
                                <tr class="@(isCurrentMonth ? "table-warning" : "")">
                                    <td>
                                        @(monthGroup.Key.Year)年@(monthGroup.Key.Month)月
                                        @if (isCurrentMonth)
                                        {
                                            <span class="badge bg-warning text-dark ms-2">当月</span>
                                        }
                                    </td>
                                    <td>@monthGroup.Count() 件</td>
                                    <td>¥@monthRevenue.ToString("N0")</td>
                                    <td>¥@monthCommission.ToString("N0")</td>
                                    <td>¥@avgTransaction.ToString("N0")</td>
                                    <td>
                                        @if (monthCommission >= 3000)
                                        {
                                            <span class="badge bg-success">精算対象</span>
                                        }
                                        else if (isCurrentMonth)
                                        {
                                            <span class="badge bg-info">進行中</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">繰越</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-4">
                    <i class="bi bi-graph-down display-4 text-muted"></i>
                    <h5 class="mt-3 text-muted">売上データがありません</h5>
                    <p class="text-muted">QRコード経由での売上が発生すると、ここに表示されます。</p>
                </div>
            }
        </div>
    </div>

    <!-- Location Breakdown -->
    @if (Model.ChildDistributors != null && Model.ChildDistributors.Any())
    {
        <div class="card mb-4">
            <div class="card-header">
                <h5>拠点別売上</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>拠点名</th>
                                <th>今月売上</th>
                                <th>今月コミッション</th>
                                <th>累計売上</th>
                                <th>累計コミッション</th>
                                <th>QRコード数</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Headquarters -->
                            @{
                                var hqThisMonth = allSales.Where(s => s.DistributorId == Model.Id && 
                                                                s.SaleDate.Month == DateTime.Now.Month && 
                                                                s.SaleDate.Year == DateTime.Now.Year);
                                var hqTotal = allSales.Where(s => s.DistributorId == Model.Id);
                            }
                            <tr class="table-primary">
                                <td><strong><i class="bi bi-building"></i> 本社</strong></td>
                                <td>¥@hqThisMonth.Sum(s => s.TotalAmount).ToString("N0")</td>
                                <td>¥@hqThisMonth.Sum(s => s.DistributorCommission).ToString("N0")</td>
                                <td>¥@hqTotal.Sum(s => s.TotalAmount).ToString("N0")</td>
                                <td>¥@hqTotal.Sum(s => s.DistributorCommission).ToString("N0")</td>
                                <td>@(Model.QRCode != null ? "1" : "0") 個</td>
                            </tr>
                            
                            <!-- Child Locations -->
                            @foreach (var location in Model.ChildDistributors)
                            {
                                var locationThisMonth = allSales.Where(s => s.DistributorId == location.Id && 
                                                                      s.SaleDate.Month == DateTime.Now.Month && 
                                                                      s.SaleDate.Year == DateTime.Now.Year);
                                var locationTotal = allSales.Where(s => s.DistributorId == location.Id);
                                
                                <tr>
                                    <td><i class="bi bi-geo-alt"></i> @location.LocationName</td>
                                    <td>¥@locationThisMonth.Sum(s => s.TotalAmount).ToString("N0")</td>
                                    <td>¥@locationThisMonth.Sum(s => s.DistributorCommission).ToString("N0")</td>
                                    <td>¥@locationTotal.Sum(s => s.TotalAmount).ToString("N0")</td>
                                    <td>¥@locationTotal.Sum(s => s.DistributorCommission).ToString("N0")</td>
                                    <td>@(location.QRCode != null ? "1" : "0") 個</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot class="table-dark">
                            <tr>
                                <th>合計</th>
                                <th>¥@allSales.Where(s => s.SaleDate.Month == DateTime.Now.Month && s.SaleDate.Year == DateTime.Now.Year).Sum(s => s.TotalAmount).ToString("N0")</th>
                                <th>¥@allSales.Where(s => s.SaleDate.Month == DateTime.Now.Month && s.SaleDate.Year == DateTime.Now.Year).Sum(s => s.DistributorCommission).ToString("N0")</th>
                                <th>¥@totalRevenue.ToString("N0")</th>
                                <th>¥@totalCommission.ToString("N0")</th>
                                <th>@((Model.QRCode != null ? 1 : 0) + (Model.ChildDistributors?.Sum(cd => cd.QRCode != null ? 1 : 0) ?? 0)) 個</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    }

    <!-- Settlement Info -->
    <div class="alert alert-info">
        <h6><i class="bi bi-info-circle"></i> 精算について</h6>
        <ul class="mb-0">
            <li><strong>精算サイクル:</strong> 毎月末締め → 翌月15日支払い</li>
            <li><strong>最低支払額:</strong> ¥3,000（未満は翌月繰越）</li>
            <li><strong>精算対象:</strong> 全拠点の売上を会社単位で合算して精算</li>
            <li><strong>振込手数料:</strong> 弊社負担</li>
        </ul>
    </div>
</div>

<script>
function exportToCSV() {
    const rows = [
        ['拠点名', '今月売上', '今月コミッション', '累計売上', '累計コミッション', 'QRコード数']
    ];
    
    // Add data rows from table
    const table = document.querySelector('.table-hover tbody');
    if (table) {
        table.querySelectorAll('tr').forEach(row => {
            const cells = row.querySelectorAll('td');
            const rowData = Array.from(cells).map(cell => 
                cell.textContent.trim().replace(/[¥,]/g, '')
            );
            rows.push(rowData);
        });
    }
    
    const csvContent = '\uFEFF' + rows.map(row => 
        row.map(cell => `"${cell}"`).join(',')
    ).join('\n');
    
    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    link.href = URL.createObjectURL(blob);
    link.download = '@(Model.CompanyName)_精算データ_' + new Date().toISOString().slice(0, 10) + '.csv';
    link.click();
}
</script>

<style>
    @@media print {
        .btn-group {
            display: none !important;
        }
        .alert {
            -webkit-print-color-adjust: exact;
            color-adjust: exact;
        }
    }
</style>